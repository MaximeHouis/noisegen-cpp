name: C++ Cross-Platform Build

on: push

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, macos-10.15, windows-2019 ]
        mode: [ "Debug", "Release" ]
        cppstd: [ 17, 20 ]
        include:
          - os: ubuntu-20.04
            pip-path: ~/.cache/pip
            cli-path: ./build/pengen
            lib-path: ./build/libpengen.a
          - os: macos-10.15
            pip-path: ~/Library/Caches/pip
            cli-path: ./build/pengen
            lib-path: ./build/libpengen.a
          - os: windows-2019
            pip-path: ~\AppData\Local\pip\Cache
            cli-path: ./build/pengen.exe
            lib-path: ./build/libpengen.lib
            pdb-path: ./build/*.pdb

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: apt dependencies
        run: sudo apt install -y libtbb-dev libgtk2.0-dev
        if: startsWith(matrix.os, 'ubuntu')

#      - name: Pip Cache
#        uses: actions/cache@v2
#        with:
#          path: ${{ matrix.pip-path }}
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-

      - name: Conan Cache
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: ${{ runner.os }}-conan-${{ matrix.mode }}-cpp${{ matrix.cppstd }}-${{ hashFiles('**/conanfile.txt') }}
          # Generated too many errors. Better rebuild when the conanfile changes to avoid more errors.
          # restore-keys: |
          #   ${{ runner.os }}-conan-${{ matrix.mode }}-cpp${{ matrix.cppstd }}-
        id: cache

      - name: Install Pip Dependencies
        run: pip install -r requirements.txt

      # Workaround for macOS clang builds, I don't know why but dependencies think the project uses C++gnu98
      - name: Generate default Conan profile
        if: startsWith(matrix.os, 'macos') && steps.cache.outputs.cache-hit != 'true'
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.cppstd=${{ matrix.cppstd }} default
          cat ~/.conan/profiles/default

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_CXX_STANDARD=${{ matrix.cppstd }} \
                -DCMAKE_BUILD_TYPE=${{ matrix.mode }} \
                -DPENGEN_WITH_PROFILER=ON ..

      - name: Build
        working-directory: build
        run: cmake --build . --config ${{ matrix.mode }}

      - name: Generate Test Images
        run: |
          mkdir -p generated-images

          echo "Random:"
          ${{ matrix.cli-path }} --output ./generated-images/random.pgm 1024 1024
          echo "Ken Perlin:"
          ${{ matrix.cli-path }} --output ./generated-images/kenperlin.pgm --kenperlin 1024 1024

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-${{ matrix.mode }}-cpp${{ matrix.cppstd }}.zip
          path: |
            ./generated-images/*
            ${{ matrix.cli-path }}
            ${{ matrix.lib-path }}
            ${{ matrix.pdb-path }}
          if-no-files-found: warn
          retention-days: 14
