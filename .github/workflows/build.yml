name: C++ Cross-Platform Build

on: push

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        mode: [ "Debug", "Release" ]
        include:
          - os: ubuntu-latest
            pip-path: ~/.cache/pip
          - os: macos-latest
            pip-path: ~/Library/Caches/pip
          - os: windows-latest
            pip-path: ~\AppData\Local\pip\Cache

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Pip Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.pip-path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        id: pip-cache

      - name: Install Pip Dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - name: Conan Cache
        uses: actions/cache@v2
        with:
          path: ~/.conan
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.txt') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.mode }} ..

      - name: Build
        working-directory: build
        run: cmake --build .
